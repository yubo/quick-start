receivers:
  otlp:
    protocols:
      grpc:
  filelog:
    include: [ "/testdata/*.log" ]
    start_at: beginning
    operators:
      - type: regex_parser
        regex: '^(?P<time>\d{4}-\d{2}-\d{2}) (?P<sev>[A-Z]*) (?P<msg>.*)$'
        timestamp:
          parse_from: time
          layout: '%Y-%m-%d'
        severity:
          parse_from: sev
    converter:
      max_flush_count: 100
      flush_interval: 100ms
  prometheus:
    config:
      scrape_configs: # https://github.com/prometheus/prometheus/blob/v2.28.1/docs/configuration/configuration.md#scrape_config
        - job_name: 'node-exporter'
          scrape_interval: 5s
          static_configs:
            - targets: ['node-exporter:9100']
  statsd:
    endpoint: "otel-agent:8125" # default localhost:8125
    aggregation_interval: 6s  # default 60s
    enable_metric_type: false  # Enable the statsd receiver to be able to emit the metric type(gauge, counter, timer(in the future), histogram(in the future)) as a label.
    timer_histogram_mapping:
      - statsd_type: "histogram"
        observer_type: "gauge"
      - statsd_type: "timing"
        observer_type: "gauge"

exporters:
  file:
    path: /testdata/output.json
  logging:
  otlp:
    endpoint: "otel-gateway:4317" ##
    tls:
      insecure: true
  #otlp/secure_no_verify:
  #  endpoint: "otel-gateway:4317" ##
  #  tls:
  #    insecure: false
  #    insecure_skip_verify: true

processors:
  batch:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, otlp]
    metrics:
      receivers: [otlp, prometheus, statsd]
      processors: [batch]
      exporters: [logging, otlp]
    logs:
      receivers: [otlp, filelog]
      processors: [batch]
      exporters: [logging, otlp]
  telemetry:
    logs:
      level: "debug"
